# -*- coding: utf-8 -*-

"""
    pythonwithgittest.models.inbound_poll_response

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class InboundPollResponse(object):

    """Implementation of the 'InboundPollResponse' model.

    Poll for incoming messages returning the latest. Only works if no
    callback url was specified when provisioning a number.

    Attributes:
        status (string): message status
        destination_address (string): The phone number (recipient) that the
            message was sent to(in E.164 format).
        sender_address (string): The phone number (sender) that the message
            was sent from (in E.164 format).
        message (string): Text of the message that was sent
        message_id (string): Message Id
        sent_timestamp (string): The date and time when the message was sent
            by recipient.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "status":'status',
        "destination_address":'destinationAddress',
        "sender_address":'senderAddress',
        "message":'message',
        "message_id":'messageId',
        "sent_timestamp":'sentTimestamp'
    }

    def __init__(self,
                 status=None,
                 destination_address=None,
                 sender_address=None,
                 message=None,
                 message_id=None,
                 sent_timestamp=None):
        """Constructor for the InboundPollResponse class"""

        # Initialize members of the class
        self.status = status
        self.destination_address = destination_address
        self.sender_address = sender_address
        self.message = message
        self.message_id = message_id
        self.sent_timestamp = sent_timestamp


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        status = dictionary.get('status')
        destination_address = dictionary.get('destinationAddress')
        sender_address = dictionary.get('senderAddress')
        message = dictionary.get('message')
        message_id = dictionary.get('messageId')
        sent_timestamp = dictionary.get('sentTimestamp')

        # Return an object of this model
        return cls(status,
                   destination_address,
                   sender_address,
                   message,
                   message_id,
                   sent_timestamp)


